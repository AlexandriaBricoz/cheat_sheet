Single responsibility — принцип единственной ответственности
Open-closed — принцип открытости / закрытости
Liskov substitution — принцип подстановки Барбары Лисков
Interface segregation — принцип разделения интерфейса
Dependency inversion — принцип инверсии зависимостей

принцип единственной ответственности%
    Каждый класс должен решать лишь одну задачу.
принцип открытости / закрытости:
    Програмные сущности (классы, модули, функции и т.д.) должны быть открыты для расширения и закрыты для изменений.
принцип подстановки Барбары Лисков:
    Наследующий класс должен дополнять, а не замещать поведение базового класса.
принцип разделения интерфейса:
    Создавайте узкоспециализированные интерфейсы, предназначенные для конкретного клиента.
    Клиенты не должны зависеть от интерфейсов, которые они не используют.
принцип инверсии зависимостей:
    Объектом зависимости должна быть абстракция, а не что-то конкретное.
